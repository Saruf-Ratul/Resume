%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 201 324 395 518 
%%LanguageLevel: 1
%%Creator: CorelDRAW 9
%%Title: 3.eps
%%CreationDate: Mon Mar 05 16:52:12 2001
%%For: ldn
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 9 Version 9.337
%Color profile:  Generic CMYK printer profile
%%BeginResource: procset wCorel9Dict 9.0 0
/wCorel9Dict 300 dict def wCorel9Dict begin
% Copyright (c)1992-1999 Corel Corporation
% All rights reserved.     v9.0 r0.5
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/$fst 128 def/$pad 0 def/$rox 0 def/$roy 0 def/$fmp 50 def/@dlt_hsb{$fco nff ge
{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/kdb xd nff $fco sub div
/kdb2 xd sub neg 2 div dup $fco div/kds xd nff $fco sub div/kds2 xd sub neg dup
0 eq{pop $frb 2 eq{.99}{-.99}ifelse}if dup $frb 2 eq exch 0 lt and{1 add}if dup
$frb 1 eq exch 0 gt and{1 sub}if 2 div dup $fco div/kdh xd nff $fco sub div
/kdh2 xd}bd/@dlt_cmyk{$fmp 50 eq{sub neg nff dup 1 gt{1 sub}if div/$dk xd sub
neg nff dup 1 gt{1 sub}if div/$dy xd sub neg nff dup 1 gt{1 sub}if div/$dm xd
sub neg nff dup 1 gt{1 sub}if div/$dc xd sub neg nff dup 1 gt{1 sub}if div/$dt
xd}{$fco nff ge{/$fco nff 1 sub def}if sub neg 2 div dup $fco div/$dk xd nff
$fco sub div/$dk2 xd sub neg 2 div dup $fco div/$dy xd nff $fco sub div/$dy2 xd
sub neg 2 div dup $fco div/$dm xd nff $fco sub div/$dm2 xd sub neg 2 div dup
$fco div/$dc xd nff $fco sub div/$dc2 xd sub neg 2 div dup $fco div/$dt xd nff
$fco sub div/$dt2 xd}ifelse}bd/@dlt{$fse $fss sub dup/nff xd $fmp mul $fmp add
100 div round cvi dup 0 le{pop 1}if/$fco xd/$fi 0 def $frb dup 1 eq exch 2 eq
or{$frt dup $frc $frm $fry $frk @tc_5 4 copy cmyk2rgb rgb2hsb 3 copy/myb xd
/mys xd/myh xd $tot $toc $tom $toy $tok @tc_5 cmyk2rgb rgb2hsb 3 1 roll 4 1
roll 5 1 roll @dlt_hsb}{$frt dup $frc $frm $fry $frk @tc_5 5 copy $tot dup $toc
$tom $toy $tok @tc_5 5 1 roll 6 1 roll 7 1 roll 8 1 roll 9 1 roll @dlt_cmyk}
ifelse}bd/@ffnxt{/$fi $fi 1 add def $frb dup 1 eq exch 2 eq or{pop pop pop pop
myh mys myb $fi $fco lt{kdb add 3 1 roll kds add 3 1 roll kdh add 3 1 roll}{
kdb2 add 3 1 roll kds2 add 3 1 roll kdh2 add 3 1 roll}ifelse 3 copy/myb xd/mys
xd/myh xd hsb2rgb rgb2cmyk}{$fi $fco lt $fmp 50 eq or{$dk add 5 1 roll $dy add
5 1 roll $dm add 5 1 roll $dc add 5 1 roll $dt add 5 1 roll}{$dk2 add 5 1 roll
$dy2 add 5 1 roll $dm2 add 5 1 roll $dc2 add 5 1 roll $dt2 add 5 1 roll}ifelse
}ifelse}bd/ffcol{5 copy $fsit 0 eq{setcmykcolor pop}{SepMode_5 0 ne{$frn
findcmykcustomcolor exch setcustomcolor}{pop pop pop pop $frc $frm $fry $frk
$frn findcmykcustomcolor exch setcustomcolor}ifelse}ifelse}bd/@ftl{1 index 4
index sub dup $pad mul dup/$pdw xd 2 mul sub $fst div/$wid xd 2 index sub/$hei
xd pop Tl @dlt $fss 0 eq{ffcol n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l @cp $ffpnt
{fill}{@np}ifelse}if $fss $wid mul $pdw add 0 Tl nff{ffcol n 0 0 m 0 $hei l
$wid $hei l $wid 0 l @cp $ffpnt{fill}{@np}ifelse $wid 0 Tl @ffnxt}repeat 5 rp
$tot dup $toc $tom $toy $tok @tc_5 ffcol n 0 0 m 0 $hei l $pdw $hei l $pdw 0 l
@cp $ffpnt{fill}{@np}ifelse 5 rp}bd/@ftrs{1 index 4 index sub dup $rox mul
/$row xd 2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul
exch dup mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst
div/$wid xd 4 index add $roh add exch 5 index add $row add exch Tl $fan rotate
pop pop pop pop @dlt $fss 0 eq{ffcol $fty 3 eq{$hei dup neg dup m 2 mul @sqr}{
0 0 m 0 0 $hei 0 360 arc}ifelse $ffpnt{fill}{@np}ifelse}if 1.0 $pad 2 mul sub
dup scale $hei $fss $wid mul sub/$hei xd nff{ffcol $fty 3 eq{n $hei dup neg dup
m 2 mul @sqr}{n 0 0 m 0 0 $hei 0 360 arc}ifelse $ffpnt{fill}{@np}ifelse/$hei
$hei $wid sub def @ffnxt}repeat 5 rp}bd/@ftc{1 index 4 index sub dup $rox mul
/$row xd 2 div 1 index 4 index sub dup $roy mul/$roh xd 2 div 2 copy dup mul
exch dup mul add sqrt $row dup mul $roh dup mul add sqrt add dup/$hei xd $fst
div/$wid xd 4 index add $roh add exch 5 index add $row add exch Tl pop pop pop
pop @dlt $fss 0 eq{ffcol $ffpnt{fill}{@np}ifelse}{n}ifelse/$dang 180 $fst 1 sub
div def/$sang $dang -2 div 180 add def/$eang $dang 2 div 180 add def/$sang
$sang $dang $fss mul add def/$eang $eang $dang $fss mul add def/$sang $eang
$dang sub def nff{ffcol n 0 0 m 0 0 $hei $sang $fan add $eang $fan add arc
$ffpnt{fill}{@np}ifelse 0 0 m 0 0 $hei $eang neg $fan add $sang neg $fan add
arc $ffpnt{fill}{@np}ifelse/$sang $eang def/$eang $eang $dang add def @ffnxt}
repeat 5 rp}bd/@fstAdjust{72 0 matrix defaultmatrix dtransform exch dup mul
exch dup mul add sqrt currentscreen pop pop div dup mul 1 add cvi 2 256 InRange
$fsc 1 sub dup 0 le{pop 1}if mul/opt$fst xd AutoSteps dup 1 eq exch 3 eq or{
opt$fst dup dup $fst dup 3 1 roll div exch 3 -1 roll gt{/$adj xd/$fst xd}{pop
pop}ifelse}if AutoSteps dup 2 eq exch 3 eq or{opt$fst dup dup $fst dup 3 1 roll
div exch 3 -1 roll lt{/$adj xd/$fst xd}{pop pop}ifelse}if}bd/@ff{/old$fst $fst
def/$adj 1 def/$fss 0 def $o 1 eq setoverprint AutoSteps 0 gt{@fstAdjust}if 1 1
$fsc 1 sub{dup 1 sub $fsit 0 eq{$fsa exch 5 mul 5 getinterval aload pop pop
/$frk xd/$fry xd/$frm xd/$frc xd/$frn _ def/$frt 1 def $fsa exch 5 mul 5
getinterval aload pop $adj mul cvi $fss add/$fse xd/$tok xd/$toy xd/$tom xd
/$toc xd/$ton _ def/$tot 1 def}{$fsa exch 7 mul 7 getinterval aload pop pop
/$frt xd/$frn xd/$frk xd/$fry xd/$frm xd/$frc xd $fsa exch 7 mul 7 getinterval
aload pop $adj mul cvi $fss add/$fse xd/$tot xd/$ton xd/$tok xd/$toy xd/$tom xd
/$toc xd}ifelse $fsit 0 eq SepMode_5 0 eq or dup not CurrentInkName_5 $frn eq
and or{@sv $ctm setmatrix wclip Bbllx Bblly Bburx Bbury $fty 2 eq{@ftc}{1 index
3 index m 2 copy l 3 index 1 index l 3 index 3 index l @cp $fty dup 1 eq exch 3
eq or{@ftrs}{pop pop pop pop $fan rotate pathbbox @ftl}ifelse}ifelse @rs/$fss
$fse def}{1 0 0 0 0 _ $o @scc_5{wfill}if}ifelse}for @np/$fst old$fst def}bd/@k
{/$fil 2 def/$fmp xd/$roy xd/$rox xd/$pad xd/$fty xd/$fan xd $fty 1 eq{/$fan 0
def}if/$frb xd/$fst xd/$fsc xd/$fsa xd/$fsit 0 def}bd/@x{/$fil 2 def/$fmp xd
/$roy xd/$rox xd/$pad xd/$fty xd/$fan xd $fty 1 eq{/$fan 0 def}if/$frb xd/$fst
xd/$fsc xd/$fsa xd/$fsit 1 def}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel9Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
201.25984 324.56693 394.01575 517.32283 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
201.25984 517.32283 m
394.01575 517.32283 L
394.01575 324.56693 L
201.25984 324.56693 L
201.25984 517.32283 L
@c
F

@rax %Note: Object
211.57824 375.67417 383.69735 466.21559 @E
0 O 0 @g
[ 0.00 0.00 0.00 1.00  0
0.76 0.55 0.18 0.05  64
0.00 0.00 0.00 0.00  64
] 3 128 3 0 1 0.15 -0.25 0.50 50 @k
/$fm 0 def
297.63780 375.67417 m
345.16630 375.67417 383.69735 395.94331 383.69735 420.94488 C
383.69735 445.94646 345.16630 466.21559 297.63780 466.21559 C
250.10929 466.21559 211.57824 445.94646 211.57824 420.94488 C
211.57824 395.94331 250.10929 375.67417 297.63780 375.67417 C
@c
F

@rax %Note: Object
214.94013 379.03550 380.33518 462.85427 @E
 0 O 0 @g
0.65 0.45 0.05 0.00 k
/$fm 0 def
297.63780 379.03550 m
343.30989 379.03550 380.33518 397.79943 380.33518 420.94488 C
380.33518 444.09033 343.30989 462.85427 297.63780 462.85427 C
251.96570 462.85427 214.94013 444.09033 214.94013 420.94488 C
214.94013 397.79943 251.96570 379.03550 297.63780 379.03550 C
@c
F

@rax %Note: Object
236.42646 394.24961 318.87099 454.36819 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
314.38970 407.39924 m
318.49200 428.51140 L
319.41751 433.27616 318.64762 436.83080 316.20416 439.07613 C
313.83751 441.24973 309.81969 442.30649 303.92107 442.30649 C
296.81745 442.30649 L
298.85046 452.76633 L
298.92671 453.16091 298.82353 453.56854 298.56841 453.87865 C
298.31216 454.18876 297.93203 454.36819 297.53036 454.36819 C
287.72561 454.36819 L
287.08157 454.36819 286.52854 453.91181 286.40523 453.27969 C
282.04923 430.86643 L
281.65294 433.38869 280.67698 435.55663 279.11509 437.34529 C
276.23906 440.63717 271.69002 442.30649 265.59326 442.30649 C
246.58923 442.30649 L
245.94520 442.30649 245.39187 441.85011 245.26913 441.21798 C
236.45140 395.85033 L
236.37458 395.45660 236.47805 395.04898 236.73373 394.73915 C
236.98942 394.42876 237.36926 394.24961 237.77150 394.24961 C
247.65392 394.24961 L
248.29739 394.24961 248.85099 394.70598 248.97402 395.33783 C
251.10680 406.31102 L
258.46356 406.31102 L
262.32406 406.31102 265.56661 406.72998 268.09909 407.55430 C
270.68825 408.39619 273.07106 409.82372 275.17153 411.79011 C
276.86835 413.34917 278.27065 415.09502 279.34951 416.97808 C
277.58806 407.91231 L
277.51124 407.51858 277.61499 407.11068 277.87011 406.80085 C
278.12580 406.49102 278.50620 406.31102 278.90787 406.31102 C
288.71291 406.31102 L
289.35666 406.31102 289.90998 406.76740 290.03272 407.39924 C
294.87203 432.30217 L
301.60006 432.30217 L
304.46702 432.30217 305.30608 431.73128 305.53427 431.48580 C
305.74176 431.26186 306.17263 430.47269 305.68961 427.98557 C
301.78913 407.91231 L
301.71203 407.51773 301.81578 407.11068 302.07118 406.80085 C
302.32687 406.49102 302.70756 406.31102 303.10894 406.31102 C
313.06961 406.31102 L
313.71307 406.31102 314.26668 406.76740 314.38970 407.39924 C
@c
268.93276 424.84280 m
268.31679 421.67820 267.15628 419.42098 265.48299 418.13263 C
263.78306 416.82387 261.06350 416.15943 257.40085 416.15943 C
253.02047 416.15943 L
256.18819 432.45723 L
261.85096 432.45723 L
266.01109 432.45723 267.68721 431.56800 268.36044 430.82334 C
269.29304 429.78869 269.49061 427.72025 268.93276 424.84280 C
@c
F

@rax %Note: Object
313.00328 394.24961 358.83298 442.30620 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
355.69162 437.34529 m
352.81616 440.63717 348.26683 442.30649 342.17036 442.30649 C
323.16576 442.30649 L
322.52202 442.30649 321.96869 441.85011 321.84567 441.21798 C
313.02850 395.85033 L
312.95169 395.45660 313.05515 395.04898 313.31055 394.73915 C
313.56624 394.42876 313.94665 394.24961 314.34831 394.24961 C
324.23074 394.24961 L
324.87449 394.24961 325.42838 394.70598 325.55140 395.33783 C
327.68362 406.31102 L
335.04009 406.31102 L
338.90145 406.31102 342.14343 406.72998 344.67619 407.55430 C
347.26507 408.39619 349.64787 409.82372 351.74863 411.79011 C
353.50016 413.40019 354.94186 415.20699 356.03405 417.16148 C
357.12454 419.11313 357.90888 421.29156 358.36441 423.63609 C
359.48835 429.41679 358.58920 434.02876 355.69162 437.34529 C
@c
346.06970 424.84280 m
345.45402 421.67820 344.29323 419.42098 342.62022 418.13263 C
340.91972 416.82387 338.20101 416.15943 334.53808 416.15943 C
330.15770 416.15943 L
333.32513 432.45723 L
338.98791 432.45723 L
343.14803 432.45723 344.82416 431.56800 345.49767 430.82334 C
346.43027 429.78869 346.62841 427.72025 346.06970 424.84280 C
@c
F

@rax %Note: Object
237.77121 395.59408 280.91424 440.96145 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
261.85096 433.80227 m
265.60545 433.80227 268.10816 433.10920 269.35880 431.72334 C
270.60917 430.33720 270.90652 427.95751 270.25285 424.58598 C
269.56913 421.07443 268.25357 418.56860 266.30306 417.06680 C
264.35310 415.56501 261.38523 414.81496 257.40085 414.81496 C
251.38913 414.81496 L
255.07956 433.80227 L
261.85096 433.80227 L
@c
237.77150 395.59380 m
247.65392 395.59380 L
249.99846 407.65578 L
258.46356 407.65578 L
262.19877 407.65578 265.27096 408.04753 267.68324 408.83357 C
270.09553 409.61707 272.28813 410.93291 274.26132 412.77997 C
275.91732 414.30189 277.25726 415.98142 278.28340 417.81713 C
279.30869 419.65228 280.03691 421.67764 280.46721 423.89263 C
281.51291 429.27080 280.72403 433.45956 278.10227 436.46031 C
275.48079 439.46135 271.31017 440.96145 265.59326 440.96145 C
246.58923 440.96145 L
237.77150 395.59380 L
@c
F

@rax %Note: Object
278.90787 407.65578 317.52935 453.02315 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
287.72561 453.02315 m
297.53036 453.02315 L
295.18611 440.96145 L
303.92107 440.96145 L
309.41688 440.96145 313.20794 440.00249 315.29452 438.08598 C
317.38110 436.16863 318.00614 433.06186 317.17191 428.76709 C
313.06961 407.65578 L
303.10894 407.65578 L
307.00942 427.72904 L
307.45332 430.01235 307.29033 431.56998 306.51931 432.40082 C
305.74857 433.23080 304.10816 433.64665 301.60006 433.64665 C
293.76369 433.64665 L
288.71291 407.65578 L
278.90787 407.65578 L
287.72561 453.02315 L
@c
F

@rax %Note: Object
314.90872 395.59408 358.05146 440.96145 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
338.98791 433.80227 m
342.74268 433.80227 345.24482 433.10920 346.49575 431.72334 C
347.74583 430.33720 348.04375 427.95751 347.38951 424.58598 C
346.70636 421.07443 345.39080 418.56860 343.44000 417.06680 C
341.49005 415.56501 338.52217 414.81496 334.53808 414.81496 C
328.52636 414.81496 L
332.21650 433.80227 L
338.98791 433.80227 L
@c
314.90872 395.59380 m
324.79143 395.59380 L
327.13512 407.65578 L
335.60022 407.65578 L
339.33543 407.65578 342.40819 408.04753 344.82019 408.83357 C
347.23247 409.61707 349.42535 410.93291 351.39827 412.77997 C
353.05427 414.30189 354.39420 415.98142 355.42063 417.81713 C
356.44535 419.65228 357.17386 421.67764 357.60444 423.89263 C
358.64986 429.27080 357.86154 433.45956 355.23978 436.46031 C
352.61773 439.46135 348.44797 440.96145 342.73049 440.96145 C
323.72561 440.96145 L
314.90872 395.59380 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel9Dict 9.0 0
%%EOF
